"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WriterPosition = void 0;

var _googleProtobuf = require("google-protobuf");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class WriterPosition {
  constructor(totalLength, bookmarksCount) {
    this.totalLength = totalLength;
    this.bookmarksCount = bookmarksCount;
  }

}

exports.WriterPosition = WriterPosition;

class Variant2Writer extends _googleProtobuf.BinaryWriter {
  // Variant2 Fields indices
  constructor() {
    super();
  }

  writeVariantType(type, maxDepth = false) {
    this.writeUint32(Variant2Writer.variant_type_max_depth_index, type << 1 | (maxDepth ? 1 : 0));
  }

  writeTypeIndexInCache(typeIndexInCache) {
    this.writeUint32(Variant2Writer.original_type_index_in_cache_index, typeIndexInCache);
  }

  writeAttributeNamesInCache(attributeNamesInCache) {
    this._writeUint32List(Variant2Writer.attribute_names_in_cache_index, attributeNamesInCache);
  }

  _writeUint32List(field, elements) {
    this.writeFieldHeader_(field, Variant2Writer.wire_type_length_delimited);
    let length = 0;
    elements.forEach(element => {
      length += this._countUint32Bytes(element);
    });
    this.encoder_.writeUnsignedVarint32(length);
    elements.forEach(element => {
      this.encoder_.writeUnsignedVarint32(element);
    });
  }

  _countUint32Bytes(value) {
    if (value >> 7 === 0) {
      return 1;
    } else if (value >> 14 === 0) {
      return 2;
    } else if (value >> 21 === 0) {
      return 3;
    } else if (value >> 28 === 0) {
      return 4;
    } else {
      return 5;
    }
  }

  writeAttributeValues(attributeValues, writerCallback = () => {}) {
    this.writeMessage(Variant2Writer.attribute_values_index, attributeValues, writerCallback);
  }

  writeLongValue(longValue) {
    this.writeInt64(Variant2Writer.long_value_index, longValue);
  }

  writeOriginalSize(originalSize) {
    this.writeUint32(Variant2Writer.original_size_index, originalSize);
  }

  writeBytesIndexInCache(bytesIndexInCache) {
    this.writeUint32(Variant2Writer.bytes_index_in_cache_index, bytesIndexInCache);
  }

  writeCollectionKeys(collectionKeys, writerCallback = () => {}) {
    this.writeMessage(Variant2Writer.collection_keys_index, collectionKeys, writerCallback);
  }

  writeCollectionValues(collectionValues, writerCallback = () => {}) {
    this.writeMessage(Variant2Writer.collection_values_index, collectionValues, writerCallback);
  }

  writeDoubleValue(doubleValue) {
    this.writeDouble(Variant2Writer.double_value_index, doubleValue);
  }

  writeCodeValues(codeValues, writerCallback = () => {}) {
    this.writeRepeatedMessage(Variant2Writer.code_values_index, codeValues, writerCallback);
  }

  writeTimeValue(timeValue, writerCallback = () => {}) {
    this.writeMessage(Variant2Writer.time_value_index, timeValue, writerCallback);
  }

  writeLiveTailValue(livetail, writerCallback = () => {}) {
    this.writeMessage(Variant2Writer.livetail_index, livetail, writerCallback);
  }

  getPosition() {
    return new WriterPosition(this.totalLength_, this.bookmarks_.length);
  }

}

exports.default = Variant2Writer;

_defineProperty(Variant2Writer, "variant_type_max_depth_index", 1);

_defineProperty(Variant2Writer, "original_type_index_in_cache_index", 2);

_defineProperty(Variant2Writer, "attribute_names_in_cache_index", 3);

_defineProperty(Variant2Writer, "attribute_values_index", 4);

_defineProperty(Variant2Writer, "original_size_index", 5);

_defineProperty(Variant2Writer, "long_value_index", 6);

_defineProperty(Variant2Writer, "bytes_index_in_cache_index", 7);

_defineProperty(Variant2Writer, "collection_keys_index", 8);

_defineProperty(Variant2Writer, "collection_values_index", 9);

_defineProperty(Variant2Writer, "double_value_index", 10);

_defineProperty(Variant2Writer, "code_values_index", 11);

_defineProperty(Variant2Writer, "time_value_index", 12);

_defineProperty(Variant2Writer, "error_value", 16);

_defineProperty(Variant2Writer, "complex_value_index", 17);

_defineProperty(Variant2Writer, "livetail_index", 18);

_defineProperty(Variant2Writer, "wire_type_length_delimited", 2);