"use strict";

class Config {
  constructor() {
    this.loadDefaults();
  }

  loadDefaults() {
    this.LoggingConfiguration = {
      LOGGER_NAME: "rook",
      FILE_NAME: "rookout/node-rook.log",
      LOG_TO_STDERR: false,
      LOG_LEVEL: "INFO",
      PROPAGATE_LOGS: false,
      DEBUG: false,
      QUIET: false,
      SOURCEMAP_DEBUG: false
    };
    this.VersionConfiguration = {
      VERSION: "0.132.0",
      COMMIT: "53db6e614c35cc4197bf3e87e7602ee556484b96"
    };
    this.ControllerAddress = {
      HOST: "wss://control.rookout.com",
      PORT: 443
    };
    this.AgentComConfiguration = {
      BACK_OFF: 0.3,
      MAX_SLEEP: 60,
      MAX_MESSAGE_LENGTH: 1024 * 1024,
      TIMEOUT: 3,
      REQUEST_TIMEOUT_SECS: 30,
      CONNECT_TIMEOUT: 10,
      PING_TIMEOUT: 30,
      PING_INTERVAL: 10,
      RESET_BACKOFF_TIMEOUT: 3 * 60,
      MAX_QUEUED_MESSAGES: 1000,
      MAX_QUEUED_MESSAGES_SIZE: 15 * 1024 * 1024,
      WAIT_MESSAGE_CHECK_INTERVAL: 700,
      SEND_RESOLVE_TIMEOUT: 500,
      SKIP_SSL_CERTIFICATE_VERIFICATION: false,
      SKIP_NODE_VERSION_VERIFICATION: false
    };
    this.OutputWsConfiguration = {
      BUCKET_REFRESH_RATE: 5,
      MAX_AUG_MESSAGES: 10000,
      MAX_LOG_ITEMS: 200,
      MAX_STATUS_UPDATES: 200,
      PROTOBUF_VERSION2: false
    };
    this.InstrumentationConfig = {
      MIN_TIME_BETWEEN_HITS_MS: 100,
      MAX_AUG_TIME_MS: 400,
      MAX_SCRIPTS_COUNT_FAIL_SAFE: 20000,
      MAX_SCRIPTS_SIZE_FAIL_SAFE: 75 * 1000 * 1000,
      CLEANUP_ASYNC_CALLSTACK_INTERVAL_MILLISECONDS: 250,
      EMPTY_HITBREAKPOINTS_FAILSAFE: false,
      QUICK_START: false
    };
    this.RateLimitConfiguration = {
      GLOBAL_RATE_LIMIT_QUOTA_MS: "",
      GLOBAL_RATE_LIMIT_WINDOW_SIZE_MS: "",
      GLOBAL_RATE_LIMIT: process.env.ROOKOUT_GLOBAL_RATE_LIMIT || "",
      USING_GLOBAL_RATE_LIMITER: false,
      AUG_RATE_LIMITER_MINIMUM_DURATION_TIME_NS: 0.7 * 1000 * 1000,
      NON_INSPECTOR_RATE_LIMITER_MINIMUM_DURATION_TIME_NS: 0.01 * 1000 * 1000
    };
    this.GitConfiguration = {
      GIT_COMMIT: null,
      GIT_ORIGIN: null,
      SOURCES: null
    };
    this.MonitorConfiguration = {
      ENABLED: false,
      CPU_CHECK_GAP: 500
    };
    this.HeapSnapshotConfiguration = {
      SIGNAL: "SIGUSR1",
      HEAP_PATH: null
    };
    this.MemoryUsageLogService = {
      ENABLED: false,
      LOG_FILE: null,
      TRACE_GC_ENABLED: false,
      INTERVAL_SECONDS: 60
    };
    this.LogHandlerService = {
      ENABLED: false,
      CONSOLE_FUNCTIONS_HOOK_ENABLED: false,
      ENRICH_LIVE_LOGGER: false
    };
    this.DebuggerService = {
      WAIT_SECONDS_TO_CLOSE_DEBUGGER_AFTER_NO_AUGS: 600,
      IS_SUPPORTED: true,
      IS_DEPRECATED: false,
      IS_NON_LTS: false
    };
    this.DumpConfig = {
      STRING_CACHE_USERMESSAGE: false
    };
    this.SourceFiles = {
      IGNORE_NODE_MODULES: false
    };
    this.Tracing = {
      ENABLED: true
    };
  }

}

module.exports = new Config();