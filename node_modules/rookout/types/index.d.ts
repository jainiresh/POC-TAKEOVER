declare class Rook {
    start(options?: rookoutOptions): Promise<Rook>;
    startSync(timeout?: number, options?: rookoutOptions): void;
    stop(): void;
    flush(cb?: () => void): void;
}

interface StringDictionary {
    [index: string]: string;
}

declare interface rookoutOptions {
    token?: string,
    labels?: Map<string, string> | StringDictionary,
    tags?: string[],
    host?: string,
    port?: string,
    debug?: boolean,
    throw_errors?: boolean,
    log_file?: string,
    log_level?: string,
    log_to_stderr?: boolean,
    git_commit?: string,
    git_origin?: string,
    sources?: Map<string, string>,
    live_logger?: boolean,
    console_live_logger?: boolean,
    quiet?: boolean
}

declare const rook: Rook;
export = rook;